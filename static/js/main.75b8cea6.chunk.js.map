{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","style","height","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","color","heading","onChange","event","console","log","target","value","backgroundColor","rows","disabled","length","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","defaultProps","aboutText","App","setMode","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.75b8cea6.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Alert(props) {\n\n    const capitalize = (word) => {\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n\n    return (\n        <div style={{ height: '50px' }}>\n            {props.alert && <div>\n                <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n                    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\n                </div>\n            </div>}\n        </div>\n    )\n}\n\nexport default Alert\n\n    // `alert alert-warning alert-dismissible fade show` \n    //? in this 'warning' is being varied!\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport default function Navbar(props) {\n    return (\n        <div>\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n                <div className=\"container-fluid\">\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                            </li>\n                        </ul>\n                        {/* <form className=\"d-flex\">\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\n                        </form> */}\n                        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n                                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n                        </div>\n\n                    </div>\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string,\n    mode: PropTypes.string\n};\n\nNavbar.defaultProps = {\n    title: \"Kuch bhi\",\n    aboutText: \"aur batao\"\n};","import React, { useState } from 'react';\n\n\nexport default function TextForm(props) {\n\n    const [text, setText] = useState('');\n\n    const handleUpClick = () => {\n        console.log(\"Uppercase was clicked!\")\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Converted to uppercase!\", \"success\");\n    }\n\n    const handleLoClick = () => {\n        console.log(\"Lowercase was clicked!\")\n        let newText = text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Converted to lowercase!\", \"success\");\n    }\n\n    const handleClear = () => {\n        console.log(\"Clear button was clicked!\")\n        let newText = '';\n        setText(newText);\n        props.showAlert(\"Text cleared\", \"success\");\n    }\n\n    const handleOnChange = (event) => {\n        console.log(\"On change\");\n        setText(event.target.value);\n    }\n\n    const handleCopy = () => {\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Text copied!\", \"success\");\n    }\n\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[  ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Removed Extra spacesonen\", \"success\");\n\n    }\n\n    return (\n        <>\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\n                <h1 className=\"mb-4\">{props.heading}</h1>\n                <div className=\"mb-3\">\n                    <textarea className=\"form-control\" onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#042743' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} value={text} id=\"myBox\" rows=\"8\"></textarea>\n                </div>\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClear}>Clear</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n            </div>\n\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\n                <h2>Text Summary</h2>\n                <p>Word Count: {text.split(\" \").filter((element) => { return element.length !== 0 }).length} and {text.length} characters</p>\n                <p>{0.008 * text.split(\" \").filter((element) => { return element.length !== 0 }).length} minutes read!</p>\n                <h3>Preview</h3>\n                <p>{text.length > 0 ? text : \"Nothing to preview! \"}</p>\n            </div>\n        </>\n    )\n}\n\n\n\n\n// text = \"new text\"; //! wrong way to change the state\n\n// setText(\"new text\"); //correct way!","// import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"𝕋𝕖𝕩𝕥ℂ𝕦𝕣𝕖\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm heading=\"Try TextCure\" mode={mode} showAlert={showAlert} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}